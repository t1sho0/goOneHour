package main

import (
	"fmt"
	"html/template"
	"net/http"
	"path/filepath"
)

type PageData struct {
	Title       string
	Description template.HTML
}

func homeHandler(w http.ResponseWriter, r *http.Request) {
	tmplPath := filepath.Join("templates", "index.html")
	tmpl, err := template.ParseFiles(tmplPath)
	if err != nil {
		http.Error(w, "–û—à–∏–±–∫–∞ —à–∞–±–ª–æ–Ω–∞", http.StatusInternalServerError)
		return
	}

	data := PageData{
		Title: "–ú—É–º–∏–Ω–æ–≤ –ê–±–¥—É—Ä–∞—à–∏–¥ ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫",
		Description: template.HTML(`
<p>–ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ê–±–¥—É—Ä–∞—à–∏–¥. –Ø –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –ø–æ–∫–∞ –Ω–µ –∑–∞—Ç–æ—á–µ–Ω–Ω—ã–π –ø–æ–¥ –æ–¥–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.<br>
–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≤ –º–∏—Ä–µ IT, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É–∑–Ω–∞–≤–∞—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ.<br>
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è –∏–∑—É—á–∞—é —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è Go, –∏ –æ–Ω –º–Ω–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.</p>
<p><strong>–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —è –∑–Ω–∞–∫–æ–º:</strong></p>
<ul style="text-align: left; max-width: 600px; margin: auto;">
<li>Python</li>
<li>Django</li>
<li>Aiogram, Telebot</li>
<li>SQLite3 (–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Python)</li>
<li>Terminal (Bash) ‚Äî –Ω–µ–º–Ω–æ–≥–æ</li>
<li>BeautifulSoup –∏ –¥—Ä—É–≥–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞</li>
<li>Pandas (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Excel)</li>
<li>Go ‚Äî –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–∑—É—á–µ–Ω–∏—è</li>
<li>Docker (—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏)</li>
<li>Git, GitHub ‚Äî –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π</li>
</ul>
<p>–ñ–µ–ª–∞—é —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! –ï—Å–ª–∏ –≤—ã –æ—Å—Ç–∞–≤–∏—Ç–µ email ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –º—ã –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º –≤–º–µ—Å—Ç–µ –≤ –±—É–¥—É—â–µ–º üôÇ</p>`),
	}

	tmpl.Execute(w, data)
}

func main() {
	http.HandleFunc("/", homeHandler)
	http.Handle("/static/", http.StripPrefix("/static/", http.FileServer(http.Dir("static"))))
	http.Handle("/assets/", http.StripPrefix("/assets/", http.FileServer(http.Dir("assets"))))
	http.Handle("/images/", http.StripPrefix("/images/", http.FileServer(http.Dir("static/images"))))

	fmt.Println("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:8080")
	http.ListenAndServe(":8080", nil)
}